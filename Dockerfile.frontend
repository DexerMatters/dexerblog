# Dockerfile for the frontend (Next.js)

# 1. Build stage
FROM node:20-alpine AS builder

# Set proxy arguments
ARG HTTP_PROXY=${HTTP_PROXY}
ARG HTTPS_PROXY=${HTTPS_PROXY}
ENV HTTP_PROXY=${HTTP_PROXY}
ENV HTTPS_PROXY=${HTTPS_PROXY}


WORKDIR /app

# Copy package.json and lock file
COPY package.json pnpm-lock.yaml* ./

# Install pnpm
RUN npm install -g pnpm --verbose 
# Install dependencies
RUN pnpm install --verbose 
# Copy the rest of the application
COPY . .

# Build the Next.js application
RUN pnpm build

# 2. Production stage
FROM node:20-alpine
ENV http_proxy=${HTTP_PROXY}
ENV https_proxy=${HTTPS_PROXY}

WORKDIR /app

# Copy built assets from the builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/next.config.ts ./next.config.ts

# Install production dependencies
ENV http_proxy=${HTTP_PROXY}
ENV https_proxy=${HTTPS_PROXY}
RUN npm install -g pnpm --verbose
RUN pnpm install --prod --verbose

# Expose the port the app runs on
EXPOSE 3000

# Start the application
CMD echo "$http_proxy";pnpm start --verbose